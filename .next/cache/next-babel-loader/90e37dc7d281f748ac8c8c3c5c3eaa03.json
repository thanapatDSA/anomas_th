{"ast":null,"code":"var _jsxFileName = \"/Users/thanapat.p/Documents/git_test/anomas_th/src/pages/[catgeory]/index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\"; // import Link from \"next/link\";\n\nimport Header from \"../../components/Header/Header.js\";\nimport HeaderLinks from \"../../components/Header/HeaderLinks.js\";\nimport classNames from \"classnames\";\nimport Box from \"@material-ui/core/Box\";\nimport GridContainer from \"../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../components/Grid/GridItem.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"../../assets/jss/nextjs-material-kit/pages/components.js\";\nimport Card from \"../../components/Card/Card.js\";\nimport CardBody from \"../../components/Card/CardBody.js\";\nimport CardHeader from \"../../components/Card/CardHeader.js\";\nimport CardFooter from \"../../components/Card/CardFooter.js\";\nimport Muted from \"../../components/Typography/Muted.js\";\nconst useStyles = makeStyles(styles);\n\nconst catgeory = props => {\n  var _data$topic;\n\n  const router = useRouter();\n  const {\n    catgeory\n  } = router.query;\n  const classes = useStyles();\n  const [data, setData] = React.useState({});\n  console.log(\"props:\", props, \"router\", router);\n\n  const makeid = length => {\n    var result = \"\";\n    var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return result;\n  };\n\n  const generateTopic = number => {\n    var Topic = [];\n\n    for (let index = 0; index < number; index++) {\n      Topic.push({\n        id: index,\n        text: makeid(Math.floor(Math.random() * 80) + 2)\n      });\n    }\n\n    return Topic;\n  };\n\n  const generateData = catgeory => {\n    setData({\n      catgeory: catgeory,\n      topic: generateTopic(10)\n    });\n  };\n\n  React.useEffect(() => {\n    generateData(catgeory);\n  }, []);\n  console.log(data);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(Header, {\n    brand: \"ANONMAS TH\",\n    rightLinks: __jsx(HeaderLinks, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }),\n    fixed: true,\n    color: \"dark\" // {...props}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: classNames(classes.main, classes.mainRaised),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, __jsx(Box, {\n    component: \"span\",\n    display: \"block\",\n    p: 6,\n    m: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), __jsx(GridContainer, {\n    justify: \"center\",\n    spacing: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, __jsx(GridItem, {\n    xs: 11,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(CardHeader, {\n    color: \"warning\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, catgeory))), __jsx(GridContainer, {\n    justify: \"left\",\n    spacing: 32,\n    style: {\n      width: \"auto\",\n      margin: \"auto\",\n      paddingLeft: \"2rem\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, (_data$topic = data.topic) === null || _data$topic === void 0 ? void 0 : _data$topic.map(datum => __jsx(GridItem, {\n    xs: 12,\n    style: {\n      width: \"fit-content\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(Card, {\n    key: datum.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, __jsx(\"h4\", {\n    className: classes.cardTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, datum.text), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"With supporting text below as a natural lead-in to additional content.\")), __jsx(CardFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(Muted, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"2 days ago\"))), __jsx(Box, {\n    component: \"span\",\n    display: \"block\",\n    p: 1,\n    m: 1,\n    borderBottom: 1,\n    style: {\n      borderColor: \"gainsboro\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }))))), __jsx(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(Box, {\n    component: \"span\",\n    display: \"block\",\n    p: 10,\n    m: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  })));\n};\n\nexport default catgeory;","map":{"version":3,"sources":["/Users/thanapat.p/Documents/git_test/anomas_th/src/pages/[catgeory]/index.js"],"names":["React","useRouter","Header","HeaderLinks","classNames","Box","GridContainer","GridItem","makeStyles","styles","Card","CardBody","CardHeader","CardFooter","Muted","useStyles","catgeory","props","router","query","classes","data","setData","useState","console","log","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","generateTopic","number","Topic","index","push","id","text","generateData","topic","useEffect","main","mainRaised","width","margin","paddingLeft","map","datum","cardTitle","borderColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useRouter } from \"next/router\";\n// import Link from \"next/link\";\nimport Header from \"components/Header/Header.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport classNames from \"classnames\";\nimport Box from \"@material-ui/core/Box\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport styles from \"assets/jss/nextjs-material-kit/pages/components.js\";\n\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Muted from \"components/Typography/Muted.js\";\n\nconst useStyles = makeStyles(styles);\n\nconst catgeory = props => {\n  const router = useRouter();\n  const { catgeory } = router.query;\n  const classes = useStyles();\n\n  const [data, setData] = React.useState({});\n  console.log(\"props:\", props, \"router\", router);\n\n  const makeid = length => {\n    var result = \"\";\n    var characters =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n\n  const generateTopic = number => {\n    var Topic = [];\n    for (let index = 0; index < number; index++) {\n      Topic.push({\n        id: index,\n        text: makeid(Math.floor(Math.random() * 80) + 2)\n      });\n    }\n    return Topic;\n  };\n\n  const generateData = catgeory => {\n    setData({\n      catgeory: catgeory,\n      topic: generateTopic(10)\n    });\n  };\n\n  React.useEffect(() => {\n    generateData(catgeory);\n  }, []);\n\n  console.log(data);\n\n  return (\n    <div>\n      <Header\n        brand=\"ANONMAS TH\"\n        rightLinks={<HeaderLinks />}\n        fixed\n        color=\"dark\"\n        // {...props}\n      />\n      <div className={classNames(classes.main, classes.mainRaised)}>\n        <div style={{ width: \"100%\" }}>\n          <Box component=\"span\" display=\"block\" p={6} m={6} />\n        </div>\n        <GridContainer justify=\"center\" spacing={1}>\n          <GridItem xs={11}>\n            <CardHeader color=\"warning\">{catgeory}</CardHeader>\n          </GridItem>\n        </GridContainer>\n        <GridContainer\n          justify=\"left\"\n          spacing={32}\n          style={{ width: \"auto\", margin: \"auto\", paddingLeft: \"2rem\" }}\n        >\n          {data.topic?.map(datum => (\n            <GridItem xs={12} style={{ width: \"fit-content\" }}>\n              <Card key={datum.id}>\n                <CardBody>\n                  <h4 className={classes.cardTitle}>{datum.text}</h4>\n                  <p>\n                    With supporting text below as a natural lead-in to\n                    additional content.\n                  </p>\n                </CardBody>\n                <CardFooter>\n                  <Muted>2 days ago</Muted>\n                </CardFooter>\n              </Card>\n              <Box\n                component=\"span\"\n                display=\"block\"\n                p={1}\n                m={1}\n                borderBottom={1}\n                style={{ borderColor: \"gainsboro\" }}\n              />\n            </GridItem>\n          ))}\n        </GridContainer>\n      </div>\n      <div style={{ width: \"100%\" }}>\n        <Box component=\"span\" display=\"block\" p={10} m={10} />\n      </div>\n    </div>\n  );\n};\n\nexport default catgeory;\n"]},"metadata":{},"sourceType":"module"}