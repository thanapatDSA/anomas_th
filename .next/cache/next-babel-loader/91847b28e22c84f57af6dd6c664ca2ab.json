{"ast":null,"code":"var _jsxFileName = \"/Users/thanapat.p/Documents/git_test/anomas_th/src/components/Header/Header.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\"; // @material-ui/icons\n\nimport Menu from \"@material-ui/icons/Menu\"; // core components\n\nimport styles from \"../../assets/jss/nextjs-material-kit/components/headerStyle.js\";\nconst useStyles = makeStyles(styles);\nexport default function Header(props) {\n  console.log(props);\n  const classes = useStyles();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  React.useEffect(() => {\n    if (props.changeColorOnScroll) {\n      window.addEventListener(\"scroll\", headerColorChange);\n    }\n\n    return function cleanup() {\n      if (props.changeColorOnScroll) {\n        window.removeEventListener(\"scroll\", headerColorChange);\n      }\n    };\n  });\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  const headerColorChange = () => {\n    const {\n      color,\n      changeColorOnScroll\n    } = props;\n    const windowsScrollTop = window.pageYOffset;\n\n    if (windowsScrollTop > changeColorOnScroll.height) {\n      document.body.getElementsByTagName(\"header\")[0].classList.remove(classes[color]);\n      document.body.getElementsByTagName(\"header\")[0].classList.add(classes[changeColorOnScroll.color]);\n    } else {\n      document.body.getElementsByTagName(\"header\")[0].classList.add(classes[color]);\n      document.body.getElementsByTagName(\"header\")[0].classList.remove(classes[changeColorOnScroll.color]);\n    }\n  };\n\n  const {\n    color,\n    rightLinks,\n    leftLinks,\n    brand,\n    fixed,\n    absolute,\n    url\n  } = props;\n  const appBarClasses = classNames({\n    [classes.appBar]: true,\n    [classes[color]]: color,\n    [classes.absolute]: absolute,\n    [classes.fixed]: fixed\n  });\n  console.log(url);\n\n  const brandComponent = __jsx(Link, {\n    href: url,\n    as: url,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(Button, {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, brand));\n\n  return __jsx(AppBar, {\n    className: appBarClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(Toolbar, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, leftLinks !== undefined ? brandComponent : null, __jsx(\"div\", {\n    className: classes.flex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, leftLinks !== undefined ? __jsx(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, leftLinks) : brandComponent), __jsx(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, rightLinks), __jsx(Hidden, {\n    mdUp: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: handleDrawerToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })))), __jsx(Hidden, {\n    mdUp: true,\n    implementation: \"js\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, __jsx(Drawer, {\n    variant: \"temporary\",\n    anchor: \"right\",\n    open: mobileOpen,\n    classes: {\n      paper: classes.drawerPaper\n    },\n    onClose: handleDrawerToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.appResponsive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, leftLinks, rightLinks))));\n}\nHeader.defaultProp = {\n  color: \"white\",\n  url: \"/\"\n};\nHeader.propTypes = {\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\", \"transparent\", \"white\", \"rose\", \"dark\"]),\n  rightLinks: PropTypes.node,\n  leftLinks: PropTypes.node,\n  brand: PropTypes.string,\n  fixed: PropTypes.bool,\n  absolute: PropTypes.bool,\n  url: PropTypes.string,\n  // this will cause the sidebar to change the color from\n  // props.color (see above) to changeColorOnScroll.color\n  // when the window.pageYOffset is heigher or equal to\n  // changeColorOnScroll.height and then when it is smaller than\n  // changeColorOnScroll.height change it back to\n  // props.color (see above)\n  changeColorOnScroll: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\", \"transparent\", \"white\", \"rose\", \"dark\"]).isRequired\n  })\n};","map":{"version":3,"sources":["/Users/thanapat.p/Documents/git_test/anomas_th/src/components/Header/Header.js"],"names":["React","Link","classNames","PropTypes","makeStyles","AppBar","Toolbar","IconButton","Button","Hidden","Drawer","Menu","styles","useStyles","Header","props","console","log","classes","mobileOpen","setMobileOpen","useState","useEffect","changeColorOnScroll","window","addEventListener","headerColorChange","cleanup","removeEventListener","handleDrawerToggle","color","windowsScrollTop","pageYOffset","height","document","body","getElementsByTagName","classList","remove","add","rightLinks","leftLinks","brand","fixed","absolute","url","appBarClasses","appBar","brandComponent","title","container","undefined","flex","paper","drawerPaper","appResponsive","defaultProp","propTypes","oneOf","node","string","bool","shape","number","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Link from \"next/link\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\";\n// @material-ui/icons\nimport Menu from \"@material-ui/icons/Menu\";\n// core components\nimport styles from \"assets/jss/nextjs-material-kit/components/headerStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Header(props) {\n  console.log(props);\n  const classes = useStyles();\n  const [mobileOpen, setMobileOpen] = React.useState(false);\n  React.useEffect(() => {\n    if (props.changeColorOnScroll) {\n      window.addEventListener(\"scroll\", headerColorChange);\n    }\n    return function cleanup() {\n      if (props.changeColorOnScroll) {\n        window.removeEventListener(\"scroll\", headerColorChange);\n      }\n    };\n  });\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  const headerColorChange = () => {\n    const { color, changeColorOnScroll } = props;\n    const windowsScrollTop = window.pageYOffset;\n    if (windowsScrollTop > changeColorOnScroll.height) {\n      document.body\n        .getElementsByTagName(\"header\")[0]\n        .classList.remove(classes[color]);\n      document.body\n        .getElementsByTagName(\"header\")[0]\n        .classList.add(classes[changeColorOnScroll.color]);\n    } else {\n      document.body\n        .getElementsByTagName(\"header\")[0]\n        .classList.add(classes[color]);\n      document.body\n        .getElementsByTagName(\"header\")[0]\n        .classList.remove(classes[changeColorOnScroll.color]);\n    }\n  };\n  const { color, rightLinks, leftLinks, brand, fixed, absolute, url } = props;\n  const appBarClasses = classNames({\n    [classes.appBar]: true,\n    [classes[color]]: color,\n    [classes.absolute]: absolute,\n    [classes.fixed]: fixed\n  });\n\n  console.log(url);\n  const brandComponent = (\n    <Link href={url} as={url}>\n      <Button className={classes.title}>{brand}</Button>\n    </Link>\n  );\n  return (\n    <AppBar className={appBarClasses}>\n      <Toolbar className={classes.container}>\n        {leftLinks !== undefined ? brandComponent : null}\n        <div className={classes.flex}>\n          {leftLinks !== undefined ? (\n            <Hidden smDown implementation=\"css\">\n              {leftLinks}\n            </Hidden>\n          ) : (\n            brandComponent\n          )}\n        </div>\n        <Hidden smDown implementation=\"css\">\n          {rightLinks}\n        </Hidden>\n        <Hidden mdUp>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerToggle}\n          >\n            <Menu />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n      <Hidden mdUp implementation=\"js\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={\"right\"}\n          open={mobileOpen}\n          classes={{\n            paper: classes.drawerPaper\n          }}\n          onClose={handleDrawerToggle}\n        >\n          <div className={classes.appResponsive}>\n            {leftLinks}\n            {rightLinks}\n          </div>\n        </Drawer>\n      </Hidden>\n    </AppBar>\n  );\n}\n\nHeader.defaultProp = {\n  color: \"white\",\n  url: \"/\"\n};\n\nHeader.propTypes = {\n  color: PropTypes.oneOf([\n    \"primary\",\n    \"info\",\n    \"success\",\n    \"warning\",\n    \"danger\",\n    \"transparent\",\n    \"white\",\n    \"rose\",\n    \"dark\"\n  ]),\n  rightLinks: PropTypes.node,\n  leftLinks: PropTypes.node,\n  brand: PropTypes.string,\n  fixed: PropTypes.bool,\n  absolute: PropTypes.bool,\n  url: PropTypes.string,\n  // this will cause the sidebar to change the color from\n  // props.color (see above) to changeColorOnScroll.color\n  // when the window.pageYOffset is heigher or equal to\n  // changeColorOnScroll.height and then when it is smaller than\n  // changeColorOnScroll.height change it back to\n  // props.color (see above)\n  changeColorOnScroll: PropTypes.shape({\n    height: PropTypes.number.isRequired,\n    color: PropTypes.oneOf([\n      \"primary\",\n      \"info\",\n      \"success\",\n      \"warning\",\n      \"danger\",\n      \"transparent\",\n      \"white\",\n      \"rose\",\n      \"dark\"\n    ]).isRequired\n  })\n};\n"]},"metadata":{},"sourceType":"module"}