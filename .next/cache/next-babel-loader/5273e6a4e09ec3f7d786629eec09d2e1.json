{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport classNames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Box from \"@material-ui/core/Box\"; // @material-ui/icons\n\nimport Search from \"@material-ui/icons/Search\"; // assets components\n\nimport styles from \"../assets/jss/nextjs-material-kit/pages/components.js\"; // core components\n\nimport Header from \"../components/Header/Header.js\";\nimport HeaderLinks from \"../components/Header/HeaderLinks.js\";\nimport GridContainer from \"../components/Grid/GridContainer.js\";\nimport GridItem from \"../components/Grid/GridItem.js\";\nimport Footer from \"../components/Footer/Footer.js\";\nimport CustomInput from \"../components/CustomInput/CustomInput.js\";\nimport Card from \"../components/Card/Card.js\";\nimport CardBody from \"../components/Card/CardBody.js\";\nimport CardHeader from \"../components/Card/CardHeader.js\";\nimport CardFooter from \"../components/Card/CardFooter.js\";\nimport Muted from \"../components/Typography/Muted.js\";\nvar useStyles = makeStyles(styles); // #7b7afa,#815ee5,#7057c0,#6350a6,#594991\n\nvar mockChipdata = [];\nvar mockHotTopicdata = [];\n\nvar makeid = function makeid(length) {\n  var result = \"\";\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n};\n\nvar generateData = function generateData(number) {\n  for (var index = 0; index < number; index++) {\n    mockChipdata.push({\n      id: index,\n      topic: makeid(Math.floor(Math.random() * 12) + 2)\n    });\n  }\n};\n\nvar generateComment = function generateComment(number) {\n  var Comment = [];\n\n  for (var index = 0; index < number; index++) {\n    Comment.push({\n      id: index,\n      text: makeid(Math.floor(Math.random() * 80) + 2)\n    });\n  }\n\n  return Comment;\n};\n\ngenerateData(100);\n\nvar generateDataHotTopic = function generateDataHotTopic(mockChipdata, number) {\n  for (var index = 0; index < number; index++) {\n    var rng = mockChipdata[Math.floor(Math.random() * (mockChipdata.length - 1))];\n    mockHotTopicdata.push({\n      id: rng.id,\n      topic: rng.topic,\n      Comment: generateComment(3)\n    });\n  }\n};\n\ngenerateDataHotTopic(mockChipdata, 6);\nconsole.log(mockHotTopicdata);\nexport default function Components(props) {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      topic = _React$useState2[0],\n      setTopic = _React$useState2[1];\n\n  var classes = useStyles();\n\n  var rest = _extends({}, props);\n\n  var filterItems = function filterItems(arr, query) {\n    return arr.filter(function (el) {\n      return el.topic.toLowerCase().indexOf(query.toLowerCase()) !== -1;\n    });\n  };\n\n  console.log(topic);\n  return __jsx(\"div\", null, __jsx(Header, _extends({\n    brand: \"ANONMAS TH\",\n    rightLinks: __jsx(HeaderLinks, null),\n    fixed: true,\n    color: \"dark\"\n  }, rest)), __jsx(\"div\", {\n    className: classNames(classes.main, classes.mainRaised)\n  }, __jsx(GridContainer, {\n    justify: \"center\",\n    spacing: 2\n  }, __jsx(GridItem, {\n    xs: 10,\n    direction: \"row\",\n    alignItems: \"center\",\n    className: classes.textCenter,\n    style: {\n      paddingTop: \"20vh\"\n    }\n  }, __jsx(CustomInput, {\n    inputRootCustomClasses: classes.inputRootCustomClasses,\n    formControlProps: {\n      className: classes.formControl,\n      fullWidth: true\n    },\n    inputProps: {\n      placeholder: \"Search\",\n      inputProps: {\n        \"aria-label\": \"Search\",\n        className: classes.searchInput\n      },\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\"\n      }, __jsx(Search, {\n        className: classes.Search\n      })),\n      onChange: function onChange(event) {\n        setTopic(event.target.value);\n      }\n    }\n  }))), __jsx(GridContainer, {\n    justify: \"center\",\n    style: {\n      margin: \"auto\"\n    }\n  }, filterItems(mockChipdata, topic).map(function (value) {\n    return __jsx(Chip, {\n      id: value.id,\n      label: value.topic,\n      clickable: true,\n      color: \"primary\",\n      style: {\n        margin: 5,\n        fontSize: \"15px\"\n      }\n    });\n  })), __jsx(\"div\", {\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(Box, {\n    component: \"span\",\n    display: \"block\",\n    p: 2,\n    m: 2\n  })), __jsx(GridContainer, {\n    spacing: 4,\n    justify: \"center\"\n  }, mockHotTopicdata.map(function (value) {\n    return __jsx(GridItem, {\n      xs: 5\n    }, __jsx(Card, {\n      className: classes.textCenter\n    }, __jsx(CardHeader, {\n      color: \"danger\"\n    }, value.topic), __jsx(CardBody, null, __jsx(\"div\", {\n      style: {\n        width: \"100%\"\n      }\n    }, value.Comment.map(function (value) {\n      return __jsx(Box, {\n        component: \"span\",\n        display: \"block\",\n        p: 1,\n        m: 1,\n        borderBottom: 1,\n        style: {\n          borderColor: \"gainsboro\"\n        }\n      }, value.text);\n    }))), __jsx(CardFooter, null, __jsx(Muted, null, \"2 days ago\"))));\n  })), __jsx(\"div\", {\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(Box, {\n    component: \"span\",\n    display: \"block\",\n    p: 2,\n    m: 2\n  }))), __jsx(Footer, null));\n}","map":null,"metadata":{},"sourceType":"module"}