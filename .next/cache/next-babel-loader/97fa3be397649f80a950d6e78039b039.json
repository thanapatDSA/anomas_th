{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { useRouter } from \"next/router\"; // import Link from \"next/link\";\n\nimport Header from \"../../components/Header/Header.js\";\nimport HeaderLinks from \"../../components/Header/HeaderLinks.js\";\nimport classNames from \"classnames\";\nimport Box from \"@material-ui/core/Box\";\nimport GridContainer from \"../../components/Grid/GridContainer.js\";\nimport GridItem from \"../../components/Grid/GridItem.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport styles from \"../../assets/jss/nextjs-material-kit/pages/components.js\";\nimport Card from \"../../components/Card/Card.js\";\nimport CardBody from \"../../components/Card/CardBody.js\";\nimport CardHeader from \"../../components/Card/CardHeader.js\";\nimport CardFooter from \"../../components/Card/CardFooter.js\";\nimport Muted from \"../../components/Typography/Muted.js\";\nimport Paginations from \"../../components/Pagination/Pagination.js\";\nimport Footer from \"../../components/Footer/Footer.js\";\nvar useStyles = makeStyles(styles);\nvar useStylesMatui = makeStyles(function (theme) {\n  return {\n    root: _objectSpread({}, theme.typography.button, {\n      backgroundColor: \"gainsboro\",\n      textAlign: \"center\" // padding: theme.spacing()\n\n    }),\n    small: {\n      width: theme.spacing(5),\n      height: theme.spacing(3)\n    }\n  };\n});\n\nvar catgeory = function catgeory(props) {\n  var _data$topic;\n\n  var router = useRouter();\n  var catgeory = router.query.catgeory;\n  var classes = useStyles();\n  var classesMatui = useStylesMatui();\n\n  var _React$useState = React.useState({}),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  console.log(\"props:\", props, \"router\", router);\n\n  var makeid = function makeid(length) {\n    var result = \"\";\n    var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return result;\n  };\n\n  var generateTopic = function generateTopic(number) {\n    var Topic = [];\n\n    for (var index = 0; index < number; index++) {\n      Topic.push({\n        id: index,\n        text: makeid(Math.floor(Math.random() * 80) + 2),\n        message: generateLastedMessage(3)\n      });\n    }\n\n    return Topic;\n  };\n\n  var generateLastedMessage = function generateLastedMessage(number) {\n    var Message = [];\n\n    for (var index = 0; index < number; index++) {\n      Message.push({\n        id: Math.floor(Math.random() * 800) + index,\n        text: makeid(Math.floor(Math.random() * 80) + 2)\n      });\n    }\n\n    return Message;\n  };\n\n  var generateData = function generateData(catgeory) {\n    setData({\n      catgeory: catgeory,\n      topic: generateTopic(10)\n    });\n  };\n\n  React.useEffect(function () {\n    generateData(catgeory);\n  }, []);\n  console.log(data);\n  return __jsx(\"div\", null, __jsx(Header, {\n    brand: \"ANONMAS TH\",\n    rightLinks: __jsx(HeaderLinks, null),\n    fixed: true,\n    color: \"dark\" // {...props}\n\n  }), __jsx(\"div\", {\n    className: classNames(classes.main, classes.mainRaised)\n  }, __jsx(\"div\", {\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(Box, {\n    component: \"span\",\n    display: \"block\",\n    p: 6,\n    m: 6\n  })), __jsx(GridContainer, {\n    justify: \"center\",\n    spacing: 1\n  }, __jsx(GridItem, {\n    xs: 11\n  }, __jsx(CardHeader, {\n    color: \"info\"\n  }, catgeory))), (_data$topic = data.topic) === null || _data$topic === void 0 ? void 0 : _data$topic.map(function (datum) {\n    return __jsx(GridContainer, {\n      justify: \"left\",\n      spacing: 0,\n      style: {\n        width: \"auto\",\n        margin: \"auto\",\n        marginLeft: \"inherit\",\n        marginRight: \"inherit\"\n      }\n    }, __jsx(GridItem, {\n      xs: 12,\n      style: {\n        width: \"fit-content\"\n      }\n    }, __jsx(Card, {\n      key: datum.id\n    }, __jsx(CardBody, null, __jsx(\"h4\", {\n      className: classes.cardTitle\n    }, datum.text), datum.message.map(function (value) {\n      return __jsx(Box, {\n        component: \"span\",\n        display: \"block\",\n        p: 1,\n        m: 1,\n        borderBottom: 1,\n        style: {\n          borderColor: \"gainsboro\"\n        }\n      }, __jsx(GridContainer, null, __jsx(Avatar, {\n        variant: \"square\",\n        className: classesMatui.small\n      }, value.id), __jsx(GridItem, {\n        xs: 10\n      }, value.text)));\n    })), __jsx(CardFooter, null, __jsx(Muted, null, \"2 days ago\"))), __jsx(Box, {\n      component: \"span\",\n      display: \"block\",\n      p: 1,\n      m: 1,\n      borderBottom: 1,\n      style: {\n        borderColor: \"gainsboro\"\n      }\n    })));\n  }), __jsx(\"div\", {\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(Box, {\n    component: \"span\",\n    display: \"block\",\n    p: 2,\n    m: 2\n  })), __jsx(GridContainer, {\n    justify: \"center\",\n    style: {\n      width: \"auto\",\n      margin: \"auto\"\n    }\n  }, __jsx(GridItem, {\n    xs: 12,\n    style: {\n      width: \"fit-content\"\n    }\n  }, __jsx(Paginations, {\n    pages: [{\n      text: \"PREV\"\n    }, {\n      active: true,\n      text: 1\n    }, {\n      text: 2\n    }, {\n      text: 3\n    }, {\n      text: 4\n    }, {\n      text: \"NEXT\"\n    }],\n    color: \"info\"\n  }))), __jsx(\"div\", {\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(Box, {\n    component: \"span\",\n    display: \"block\",\n    p: 2,\n    m: 2\n  }))), __jsx(Footer, null));\n};\n\nexport default catgeory;","map":null,"metadata":{},"sourceType":"module"}