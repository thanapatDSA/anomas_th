{"ast":null,"code":"var _jsxFileName = \"/Users/thanapat.p/Documents/git_test/anomas_th/src/pages/main.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport Link from \"next/link\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Box from \"@material-ui/core/Box\"; // @material-ui/icons\n\nimport Search from \"@material-ui/icons/Search\"; // assets components\n\nimport styles from \"../assets/jss/nextjs-material-kit/pages/components.js\"; // core components\n\nimport Header from \"../components/Header/Header.js\";\nimport HeaderLinks from \"../components/Header/HeaderLinks.js\";\nimport GridContainer from \"../components/Grid/GridContainer.js\";\nimport GridItem from \"../components/Grid/GridItem.js\";\nimport Footer from \"../components/Footer/Footer.js\";\nimport CustomInput from \"../components/CustomInput/CustomInput.js\";\nimport Card from \"../components/Card/Card.js\";\nimport CardBody from \"../components/Card/CardBody.js\";\nimport CardHeader from \"../components/Card/CardHeader.js\";\nimport CardFooter from \"../components/Card/CardFooter.js\";\nimport Muted from \"../components/Typography/Muted.js\";\nconst useStyles = makeStyles(styles); // #7b7afa,#815ee5,#7057c0,#6350a6,#594991\n\nvar mockChipdata = [];\nvar mockHotTopicdata = [];\n\nconst makeid = length => {\n  var result = \"\";\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n};\n\nconst generateData = number => {\n  for (let index = 0; index < number; index++) {\n    mockChipdata.push({\n      id: index,\n      topic: makeid(Math.floor(Math.random() * 12) + 2)\n    });\n  }\n};\n\nconst generateComment = number => {\n  var Comment = [];\n\n  for (let index = 0; index < number; index++) {\n    Comment.push({\n      id: index,\n      text: makeid(Math.floor(Math.random() * 80) + 2)\n    });\n  }\n\n  return Comment;\n};\n\ngenerateData(100);\n\nconst generateDataHotTopic = (mockChipdata, number) => {\n  for (let index = 0; index < number; index++) {\n    let rng = mockChipdata[Math.floor(Math.random() * (mockChipdata.length - 1))];\n    mockHotTopicdata.push({\n      id: rng.id,\n      topic: rng.topic,\n      Comment: generateComment(3)\n    });\n  }\n};\n\ngenerateDataHotTopic(mockChipdata, 6);\nconsole.log(mockHotTopicdata);\n\nconst Components = props => {\n  const [topic, setTopic] = React.useState(\"\");\n  const classes = useStyles();\n  const rest = Object.assign({}, props);\n\n  const filterItems = (arr, query) => {\n    return arr.filter(el => el.topic.toLowerCase().indexOf(query.toLowerCase()) !== -1);\n  };\n\n  console.log(topic);\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, __jsx(Header, _extends({\n    brand: \"ANONMAS TH\",\n    rightLinks: __jsx(HeaderLinks, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }),\n    fixed: true,\n    color: \"dark\"\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: classNames(classes.main, classes.mainRaised),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(GridContainer, {\n    justify: \"center\",\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, __jsx(GridItem, {\n    xs: 10,\n    direction: \"row\",\n    alignItems: \"center\",\n    className: classes.textCenter,\n    style: {\n      paddingTop: \"20vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, __jsx(CustomInput, {\n    inputRootCustomClasses: classes.inputRootCustomClasses,\n    formControlProps: {\n      className: classes.formControl,\n      fullWidth: true\n    },\n    inputProps: {\n      placeholder: \"Search\",\n      inputProps: {\n        \"aria-label\": \"Search\",\n        className: classes.searchInput\n      },\n      startAdornment: __jsx(InputAdornment, {\n        position: \"start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, __jsx(Search, {\n        className: classes.Search,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })),\n      onChange: event => {\n        setTopic(event.target.value);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }))), __jsx(GridContainer, {\n    justify: \"center\",\n    style: {\n      margin: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, filterItems(mockChipdata, topic).map(value => __jsx(Link, {\n    href: \"/[catgeory]\",\n    as: `/${value.topic}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, __jsx(Chip, {\n    id: value.id,\n    label: value.topic,\n    clickable: true,\n    color: \"primary\",\n    style: {\n      margin: 5,\n      fontSize: \"15px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })))), __jsx(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, __jsx(Box, {\n    component: \"span\",\n    display: \"block\",\n    p: 2,\n    m: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  })), __jsx(GridContainer, {\n    spacing: 4,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, mockHotTopicdata.map(value => __jsx(GridItem, {\n    xs: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, __jsx(Card, {\n    className: classes.textCenter,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, __jsx(CardHeader, {\n    color: \"danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, value.topic), __jsx(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, value.Comment.map(value => __jsx(Box, {\n    component: \"span\",\n    display: \"block\",\n    p: 1,\n    m: 1,\n    borderBottom: 1,\n    style: {\n      borderColor: \"gainsboro\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, value.text)))), __jsx(CardFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, __jsx(Muted, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"2 days ago\")))))), __jsx(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, __jsx(Box, {\n    component: \"span\",\n    display: \"block\",\n    p: 2,\n    m: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }))), __jsx(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }));\n};\n\nexport default Components;","map":{"version":3,"sources":["/Users/thanapat.p/Documents/git_test/anomas_th/src/pages/main.js"],"names":["React","classNames","Link","makeStyles","Chip","InputAdornment","Box","Search","styles","Header","HeaderLinks","GridContainer","GridItem","Footer","CustomInput","Card","CardBody","CardHeader","CardFooter","Muted","useStyles","mockChipdata","mockHotTopicdata","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","generateData","number","index","push","id","topic","generateComment","Comment","text","generateDataHotTopic","rng","console","log","Components","props","setTopic","useState","classes","rest","filterItems","arr","query","filter","el","toLowerCase","indexOf","main","mainRaised","textCenter","paddingTop","inputRootCustomClasses","className","formControl","fullWidth","placeholder","inputProps","searchInput","startAdornment","onChange","event","target","value","margin","map","fontSize","width","borderColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport Link from \"next/link\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Box from \"@material-ui/core/Box\";\n// @material-ui/icons\nimport Search from \"@material-ui/icons/Search\";\n// assets components\nimport styles from \"assets/jss/nextjs-material-kit/pages/components.js\";\n// core components\nimport Header from \"components/Header/Header.js\";\nimport HeaderLinks from \"components/Header/HeaderLinks.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Footer from \"components/Footer/Footer.js\";\nimport CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport Muted from \"components/Typography/Muted.js\";\n\nconst useStyles = makeStyles(styles);\n// #7b7afa,#815ee5,#7057c0,#6350a6,#594991\nvar mockChipdata = [];\nvar mockHotTopicdata = [];\n\nconst makeid = length => {\n  var result = \"\";\n  var characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nconst generateData = number => {\n  for (let index = 0; index < number; index++) {\n    mockChipdata.push({\n      id: index,\n      topic: makeid(Math.floor(Math.random() * 12) + 2)\n    });\n  }\n};\n\nconst generateComment = number => {\n  var Comment = [];\n  for (let index = 0; index < number; index++) {\n    Comment.push({\n      id: index,\n      text: makeid(Math.floor(Math.random() * 80) + 2)\n    });\n  }\n  return Comment;\n};\n\ngenerateData(100);\n\nconst generateDataHotTopic = (mockChipdata, number) => {\n  for (let index = 0; index < number; index++) {\n    let rng =\n      mockChipdata[Math.floor(Math.random() * (mockChipdata.length - 1))];\n    mockHotTopicdata.push({\n      id: rng.id,\n      topic: rng.topic,\n      Comment: generateComment(3)\n    });\n  }\n};\n\ngenerateDataHotTopic(mockChipdata, 6);\nconsole.log(mockHotTopicdata);\n\nconst Components = props => {\n  const [topic, setTopic] = React.useState(\"\");\n  const classes = useStyles();\n  const { ...rest } = props;\n\n  const filterItems = (arr, query) => {\n    return arr.filter(\n      el => el.topic.toLowerCase().indexOf(query.toLowerCase()) !== -1\n    );\n  };\n\n  console.log(topic);\n\n  return (\n    <div>\n      <Header\n        brand=\"ANONMAS TH\"\n        rightLinks={<HeaderLinks />}\n        fixed\n        color=\"dark\"\n        {...rest}\n      />\n      <div className={classNames(classes.main, classes.mainRaised)}>\n        <GridContainer justify=\"center\" spacing={2}>\n          <GridItem\n            xs={10}\n            direction=\"row\"\n            alignItems=\"center\"\n            className={classes.textCenter}\n            style={{ paddingTop: \"20vh\" }}\n          >\n            <CustomInput\n              inputRootCustomClasses={classes.inputRootCustomClasses}\n              formControlProps={{\n                className: classes.formControl,\n                fullWidth: true\n              }}\n              inputProps={{\n                placeholder: \"Search\",\n                inputProps: {\n                  \"aria-label\": \"Search\",\n                  className: classes.searchInput\n                },\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <Search className={classes.Search} />\n                  </InputAdornment>\n                ),\n                onChange: event => {\n                  setTopic(event.target.value);\n                }\n              }}\n            />\n          </GridItem>\n        </GridContainer>\n        <GridContainer\n          justify=\"center\"\n          style={{\n            margin: \"auto\"\n          }}\n        >\n          {filterItems(mockChipdata, topic).map(value => (\n            <Link href=\"/[catgeory]\" as={`/${value.topic}`}>\n              <Chip\n                id={value.id}\n                label={value.topic}\n                clickable\n                color=\"primary\"\n                style={{ margin: 5, fontSize: \"15px\" }}\n              />\n            </Link>\n          ))}\n        </GridContainer>\n        <div style={{ width: \"100%\" }}>\n          <Box component=\"span\" display=\"block\" p={2} m={2} />\n        </div>\n        <GridContainer spacing={4} justify=\"center\">\n          {mockHotTopicdata.map(value => (\n            <GridItem xs={5}>\n              <Card className={classes.textCenter}>\n                <CardHeader color=\"danger\">{value.topic}</CardHeader>\n                <CardBody>\n                  <div style={{ width: \"100%\" }}>\n                    {value.Comment.map(value => (\n                      <Box\n                        component=\"span\"\n                        display=\"block\"\n                        p={1}\n                        m={1}\n                        borderBottom={1}\n                        style={{ borderColor: \"gainsboro\" }}\n                      >\n                        {value.text}\n                      </Box>\n                    ))}\n                  </div>\n                </CardBody>\n                <CardFooter>\n                  <Muted>2 days ago</Muted>\n                </CardFooter>\n              </Card>\n            </GridItem>\n          ))}\n        </GridContainer>\n        <div style={{ width: \"100%\" }}>\n          <Box component=\"span\" display=\"block\" p={2} m={2} />\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Components;\n"]},"metadata":{},"sourceType":"module"}